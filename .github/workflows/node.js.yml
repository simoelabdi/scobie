name: Build, Test, and Push to DockerHub
 
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
 
jobs:
  build:
    runs-on: ubuntu-latest
 
    steps:
    - uses: actions/checkout@v2
 
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'
 
    - name: Install dependencies
      run: npm install
 
    - name: Run tests
      run: npm test -- --watchAll=false
 
    - name: Build project
      run: npm run build
 
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
 
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
 
    - name: Build and push to DockerHub
      run: |
        docker build -t momoel/scobie:latest .
        docker push momoel/scobie:latest
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  # docker_build_push:
  #   runs-on: ubuntu-20.04
  #   # needs: test
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set Docker credentials
  #       run: |
  #         echo "DOCKER_USER=$DOCKER_USER" >> $GITHUB_ENV
  #         echo "DOCKER_SECRET=$DOCKER_SECRET" >> $GITHUB_ENV
  #       env:
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}

  #     - name: Replace CONNECTION_STRING
  #       run: |
  #         SECRET_VALUE="${{ secrets.CONNECTION_STRING }}"
  #         ESCAPED_SECRET_VALUE=$(echo "${SECRET_VALUE}" | sed 's/&/\\&/g')
  #         sed -i "s|\"ProductionDB\": \"\"|\"ProductionDB\": \"${ESCAPED_SECRET_VALUE}\"|" ./UserService/appsettings.Production.json
  #       shell: bash

  #     - name: Build and push images
  #       run: |
  #         docker build -t $DOCKER_USER/user-service-amd64:v1 ./UserService
  #         docker build -t $DOCKER_USER/kiteschool-service-amd64:v1 ./KiteschoolService
  #         echo "$DOCKER_SECRET" | docker login -u $DOCKER_USER --password-stdin
  #         docker push $DOCKER_USER/user-service-amd64:v1
  #         docker push $DOCKER_USER/kiteschool-service-amd64:v1
  #       env:
  #         DOCKER_USER: ${{ secrets.DOCKER_USER }}
  #         DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}




# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - run: npm ci
#     - run: npm run build --if-present
#     - run: npm test
#     - run: docker build -t momoel/scobie:latest .
#     - run: docker login 



